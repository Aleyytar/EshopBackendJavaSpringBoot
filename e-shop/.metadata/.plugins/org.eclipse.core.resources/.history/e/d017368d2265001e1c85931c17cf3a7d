package shop.demo.business.concretes;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.stereotype.Service;

import lombok.AllArgsConstructor;
import shop.demo.business.abstracts.ProductDislikeService;
import shop.demo.business.requests.productDislikeRequests.AddProductDislikeRequest;
import shop.demo.business.responses.productDislikeResponses.GetProductDislikeResponse;
import shop.demo.core.utilities.mappers.ModelMapperService;
import shop.demo.dataAccess.abstracts.ProductDislikeRepository;
import shop.demo.entities.concretes.ProductDislike;

@Service
@AllArgsConstructor
public class ProductDislikeManager implements ProductDislikeService {
	
	private ProductDislikeRepository productDislikeRepository;
	private ModelMapperService modelMapperService;

	@Override
	public List<GetProductDislikeResponse> getProductDislikeByProductId(int id) {

		List<GetProductDislikeResponse> productDislikeResponseList = productDislikeRepository.getProductDislikesByProductId(id)
				.stream().map(productDislike -> modelMapperService.forResponse().map(productDislike, GetProductDislikeResponse.class))
				.collect(Collectors.toList());
		
		return productDislikeResponseList;
	}

	@Override
	public void add(AddProductDislikeRequest addProductDislikeRequest) {
		
		ProductDislike productDislike = modelMapperService.forRequest().map(addProductDislikeRequest, ProductDislike.class);
		productDislike.setId(0);
		productDislike.get
		
		productDislikeRepository.save(productDislike);
		

	}

	@Override
	public void delete(int id) {
		
		productDislikeRepository.deleteById(id);

	}

}
