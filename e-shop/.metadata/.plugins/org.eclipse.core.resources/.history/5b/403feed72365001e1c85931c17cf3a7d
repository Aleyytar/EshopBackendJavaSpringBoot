package shop.demo.business.concretes;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.stereotype.Service;

import lombok.AllArgsConstructor;
import shop.demo.business.abstracts.productServices.ProductLikeService;
import shop.demo.business.requests.productLikeRequests.AddProductLikeRequest;
import shop.demo.business.responses.productLikeResponses.GetProductLikeRespone;
import shop.demo.core.utilities.mappers.ModelMapperService;
import shop.demo.dataAccess.abstracts.ProductLikeRepository;
import shop.demo.entities.concretes.ProductLike;

@Service
@AllArgsConstructor
public class ProductLikeManager implements ProductLikeService {

	private ProductLikeRepository productLikeRepository;
	private ModelMapperService modelMapperService;
	
	@Override
	public List<GetProductLikeRespone> getProductLikeByProductId(int id) {
		
		List<GetProductLikeRespone> productLikeResponseList = productLikeRepository.getProductLikesByProductId(id).stream()
				.map(productLike -> modelMapperService.forResponse().map(productLike, GetProductLikeRespone.class))
				.collect(Collectors.toList());
		
		return productLikeResponseList;
	}

	@Override
	public void add(AddProductLikeRequest addProductLikeRequest) {
		
		ProductLike productLike = modelMapperService.forRequest().map(addProductLikeRequest, ProductLike.class);
		productLike.setId(0);
		
		
		productLikeRepository.save(productLike);

	}

	@Override
	public void delete(int id) {
		
		productLikeRepository.deleteById(id);
		
	}

}
